  Total:    137.25MB   168.25MB (flat, cum)   100%
     10            .          .           // section: count 
     11            .          .           // Count will return the total words and distinct words in a text file 
     12            .          .           func Count(rd io.Reader) (int, int, error) { 
     13            .          .           	// section: bufio 
     14            .          .           	// wrap the reader in a buffer 
     15            .        1MB           	br := bufio.NewReader(rd) 
     16            .          .           	// section: bufio 
     17            .          .            
     18            .          .           	var found bool 
     19            .          .           	words := map[string]int{} 
     20            .          .           	word := "" 
     21            .          .           	count := 0 
     22            .          .            
     23            .          .           	for { 
     24            .       30MB           		r, err := readRune(br) 
     25            .          .           		if err == io.EOF { 
     26            .          .           			break 
     27            .          .           		} 
     28            .          .           		if err != nil { 
     29            .          .           			return -1, -1, fmt.Errorf("error reading: %v", err) 
     30            .          .           		} 
     31            .          .            
     32            .          .           		if unicode.IsSpace(r) && found { 
     33            .          .           			found = false 
     34      88.75MB    88.75MB           			words[word] = words[word] + 1 
     35            .          .           			word = "" 
     36            .          .           			count++ 
     37            .          .           		} 
     38            .          .           		found = unicode.IsLetter(r) 
     39            .          .           		if found { 
     40      48.50MB    48.50MB           			word += string(r) 
     41            .          .           		} 
     42            .          .           	} 
     43            .          .           	return count, len(words), nil 
     44            .          .           } 
     45            .          .            

