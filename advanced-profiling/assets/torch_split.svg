<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="354" onload="init(evt)" viewBox="0 0 1200 354" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		if (func != null)
			func = func.replace(/ .*/, "");
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
				return a - b;
			if (a < b || a > b)
				return a - b;
			return matches[b] - matches[a];
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="354.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="337" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="337" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.semasleep1 (6 samples, 4.76%)</title><rect x="1124.4" y="145" width="56.2" height="15.0" fill="rgb(224,73,15)" rx="2" ry="2" />
<text text-anchor="" x="1127.44" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runti..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.startm (1 samples, 0.79%)</title><rect x="1180.6" y="209" width="9.4" height="15.0" fill="rgb(212,204,39)" rx="2" ry="2" />
<text text-anchor="" x="1183.63" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.systemstack (3 samples, 2.38%)</title><rect x="337.8" y="145" width="28.1" height="15.0" fill="rgb(208,5,54)" rx="2" ry="2" />
<text text-anchor="" x="340.78" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.semasleep.func1 (2 samples, 1.59%)</title><rect x="19.4" y="225" width="18.7" height="15.0" fill="rgb(248,9,2)" rx="2" ry="2" />
<text text-anchor="" x="22.37" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcache).refill (2 samples, 1.59%)</title><rect x="337.8" y="113" width="18.7" height="15.0" fill="rgb(213,80,45)" rx="2" ry="2" />
<text text-anchor="" x="340.78" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.gcBgMarkWorker.func2 (1 samples, 0.79%)</title><rect x="38.1" y="241" width="9.4" height="15.0" fill="rgb(221,93,32)" rx="2" ry="2" />
<text text-anchor="" x="41.10" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>strings.genSplit (114 samples, 90.48%)</title><rect x="56.8" y="209" width="1067.6" height="15.0" fill="rgb(223,224,28)" rx="2" ry="2" />
<text text-anchor="" x="59.83" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >strings.genSplit</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.systemstack (2 samples, 1.59%)</title><rect x="19.4" y="241" width="18.7" height="15.0" fill="rgb(251,66,21)" rx="2" ry="2" />
<text text-anchor="" x="22.37" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>testing.(*B).runN (115 samples, 91.27%)</title><rect x="47.5" y="257" width="1076.9" height="15.0" fill="rgb(212,37,25)" rx="2" ry="2" />
<text text-anchor="" x="50.46" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >testing.(*B).runN</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>strings.Count (29 samples, 23.02%)</title><rect x="852.9" y="193" width="271.5" height="15.0" fill="rgb(215,220,35)" rx="2" ry="2" />
<text text-anchor="" x="855.86" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >strings.Count</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.heapBitsSetType (14 samples, 11.11%)</title><rect x="721.7" y="161" width="131.2" height="15.0" fill="rgb(254,62,29)" rx="2" ry="2" />
<text text-anchor="" x="724.75" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.heapBits..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.semasleep1 (2 samples, 1.59%)</title><rect x="19.4" y="209" width="18.7" height="15.0" fill="rgb(208,17,31)" rx="2" ry="2" />
<text text-anchor="" x="22.37" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mach_semaphore_timedwait (2 samples, 1.59%)</title><rect x="19.4" y="193" width="18.7" height="15.0" fill="rgb(224,37,7)" rx="2" ry="2" />
<text text-anchor="" x="22.37" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.semawakeup (1 samples, 0.79%)</title><rect x="1180.6" y="177" width="9.4" height="15.0" fill="rgb(254,60,51)" rx="2" ry="2" />
<text text-anchor="" x="1183.63" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.park_m (7 samples, 5.56%)</title><rect x="1124.4" y="273" width="65.6" height="15.0" fill="rgb(209,229,6)" rx="2" ry="2" />
<text text-anchor="" x="1127.44" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mach_semrelease (1 samples, 0.79%)</title><rect x="1180.6" y="161" width="9.4" height="15.0" fill="rgb(206,190,17)" rx="2" ry="2" />
<text text-anchor="" x="1183.63" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mach_semaphore_signal (37 samples, 29.37%)</title><rect x="375.2" y="33" width="346.5" height="15.0" fill="rgb(223,161,32)" rx="2" ry="2" />
<text text-anchor="" x="378.24" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.mach_semaphore_signal</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.usleep (1 samples, 0.79%)</title><rect x="38.1" y="193" width="9.4" height="15.0" fill="rgb(231,182,17)" rx="2" ry="2" />
<text text-anchor="" x="41.10" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nanotime (1 samples, 0.79%)</title><rect x="365.9" y="129" width="9.3" height="15.0" fill="rgb(219,14,9)" rx="2" ry="2" />
<text text-anchor="" x="368.87" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcentral).cacheSpan (2 samples, 1.59%)</title><rect x="337.8" y="97" width="18.7" height="15.0" fill="rgb(232,93,13)" rx="2" ry="2" />
<text text-anchor="" x="340.78" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.wakep (37 samples, 29.37%)</title><rect x="375.2" y="113" width="346.5" height="15.0" fill="rgb(221,130,6)" rx="2" ry="2" />
<text text-anchor="" x="378.24" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.wakep</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mcall (7 samples, 5.56%)</title><rect x="1124.4" y="289" width="65.6" height="15.0" fill="rgb(243,56,9)" rx="2" ry="2" />
<text text-anchor="" x="1127.44" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.osyield (1 samples, 0.79%)</title><rect x="38.1" y="209" width="9.4" height="15.0" fill="rgb(231,47,54)" rx="2" ry="2" />
<text text-anchor="" x="41.10" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mallocgc (61 samples, 48.41%)</title><rect x="281.6" y="177" width="571.3" height="15.0" fill="rgb(231,217,51)" rx="2" ry="2" />
<text text-anchor="" x="284.59" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.mallocgc</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>strings.Split (114 samples, 90.48%)</title><rect x="56.8" y="225" width="1067.6" height="15.0" fill="rgb(217,86,11)" rx="2" ry="2" />
<text text-anchor="" x="59.83" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >strings.Split</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.casgstatus (1 samples, 0.79%)</title><rect x="38.1" y="225" width="9.4" height="15.0" fill="rgb(232,55,12)" rx="2" ry="2" />
<text text-anchor="" x="41.10" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.79%)</title><rect x="356.5" y="97" width="9.4" height="15.0" fill="rgb(214,155,23)" rx="2" ry="2" />
<text text-anchor="" x="359.51" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.systemstack (1 samples, 0.79%)</title><rect x="38.1" y="257" width="9.4" height="15.0" fill="rgb(243,145,44)" rx="2" ry="2" />
<text text-anchor="" x="41.10" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.notewakeup (1 samples, 0.79%)</title><rect x="1180.6" y="193" width="9.4" height="15.0" fill="rgb(212,22,45)" rx="2" ry="2" />
<text text-anchor="" x="1183.63" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcache).nextFree (3 samples, 2.38%)</title><rect x="337.8" y="161" width="28.1" height="15.0" fill="rgb(244,31,42)" rx="2" ry="2" />
<text text-anchor="" x="340.78" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.nanotime (1 samples, 0.79%)</title><rect x="365.9" y="145" width="9.3" height="15.0" fill="rgb(230,180,49)" rx="2" ry="2" />
<text text-anchor="" x="368.87" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.systemstack (37 samples, 29.37%)</title><rect x="375.2" y="145" width="346.5" height="15.0" fill="rgb(230,99,24)" rx="2" ry="2" />
<text text-anchor="" x="378.24" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.systemstack</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>testing.(*B).launch (115 samples, 91.27%)</title><rect x="47.5" y="273" width="1076.9" height="15.0" fill="rgb(252,31,36)" rx="2" ry="2" />
<text text-anchor="" x="50.46" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >testing.(*B).launch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcentral).grow (1 samples, 0.79%)</title><rect x="337.8" y="81" width="9.3" height="15.0" fill="rgb(250,162,43)" rx="2" ry="2" />
<text text-anchor="" x="340.78" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.79%)</title><rect x="347.1" y="81" width="9.4" height="15.0" fill="rgb(239,203,25)" rx="2" ry="2" />
<text text-anchor="" x="350.14" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mach_semrelease (37 samples, 29.37%)</title><rect x="375.2" y="49" width="346.5" height="15.0" fill="rgb(223,15,37)" rx="2" ry="2" />
<text text-anchor="" x="378.24" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.mach_semrelease</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>strings.Index (19 samples, 15.08%)</title><rect x="946.5" y="177" width="177.9" height="15.0" fill="rgb(245,31,34)" rx="2" ry="2" />
<text text-anchor="" x="949.51" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >strings.Index</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.resetspinning (1 samples, 0.79%)</title><rect x="1180.6" y="241" width="9.4" height="15.0" fill="rgb(253,169,11)" rx="2" ry="2" />
<text text-anchor="" x="1183.63" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.semasleep.func1 (6 samples, 4.76%)</title><rect x="1124.4" y="161" width="56.2" height="15.0" fill="rgb(214,184,18)" rx="2" ry="2" />
<text text-anchor="" x="1127.44" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runti..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.notewakeup (37 samples, 29.37%)</title><rect x="375.2" y="81" width="346.5" height="15.0" fill="rgb(236,125,9)" rx="2" ry="2" />
<text text-anchor="" x="378.24" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.notewakeup</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (126 samples, 100%)</title><rect x="10.0" y="305" width="1180.0" height="15.0" fill="rgb(207,168,39)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.makeslice (62 samples, 49.21%)</title><rect x="272.2" y="193" width="580.7" height="15.0" fill="rgb(210,120,46)" rx="2" ry="2" />
<text text-anchor="" x="275.22" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.makeslice</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcache).nextFree.func1 (2 samples, 1.59%)</title><rect x="337.8" y="129" width="18.7" height="15.0" fill="rgb(221,144,26)" rx="2" ry="2" />
<text text-anchor="" x="340.78" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.startTheWorldWithSema (37 samples, 29.37%)</title><rect x="375.2" y="129" width="346.5" height="15.0" fill="rgb(217,42,28)" rx="2" ry="2" />
<text text-anchor="" x="378.24" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.startTheWorldWithSema</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.gcMarkDone (3 samples, 2.38%)</title><rect x="10.0" y="257" width="28.1" height="15.0" fill="rgb(246,6,46)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.lock (1 samples, 0.79%)</title><rect x="337.8" y="33" width="9.3" height="15.0" fill="rgb(247,149,24)" rx="2" ry="2" />
<text text-anchor="" x="340.78" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mheap).alloc_m (1 samples, 0.79%)</title><rect x="356.5" y="113" width="9.4" height="15.0" fill="rgb(222,170,41)" rx="2" ry="2" />
<text text-anchor="" x="359.51" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.startm (37 samples, 29.37%)</title><rect x="375.2" y="97" width="346.5" height="15.0" fill="rgb(210,118,5)" rx="2" ry="2" />
<text text-anchor="" x="378.24" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.startm</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.findrunnable (6 samples, 4.76%)</title><rect x="1124.4" y="241" width="56.2" height="15.0" fill="rgb(240,34,9)" rx="2" ry="2" />
<text text-anchor="" x="1127.44" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runti..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.systemstack (6 samples, 4.76%)</title><rect x="1124.4" y="177" width="56.2" height="15.0" fill="rgb(248,73,44)" rx="2" ry="2" />
<text text-anchor="" x="1127.44" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runti..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.schedule (7 samples, 5.56%)</title><rect x="1124.4" y="257" width="65.6" height="15.0" fill="rgb(249,212,35)" rx="2" ry="2" />
<text text-anchor="" x="1127.44" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.stopm (6 samples, 4.76%)</title><rect x="1124.4" y="225" width="56.2" height="15.0" fill="rgb(235,142,27)" rx="2" ry="2" />
<text text-anchor="" x="1127.44" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runti..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mach_semaphore_wait (6 samples, 4.76%)</title><rect x="1124.4" y="129" width="56.2" height="15.0" fill="rgb(216,226,47)" rx="2" ry="2" />
<text text-anchor="" x="1127.44" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runti..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.heapBits.initSpan (1 samples, 0.79%)</title><rect x="337.8" y="65" width="9.3" height="15.0" fill="rgb(207,25,17)" rx="2" ry="2" />
<text text-anchor="" x="340.78" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.79%)</title><rect x="356.5" y="129" width="9.4" height="15.0" fill="rgb(230,44,37)" rx="2" ry="2" />
<text text-anchor="" x="359.51" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.semawakeup (37 samples, 29.37%)</title><rect x="375.2" y="65" width="346.5" height="15.0" fill="rgb(219,98,17)" rx="2" ry="2" />
<text text-anchor="" x="378.24" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.semawakeup</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.indexbytebody (8 samples, 6.35%)</title><rect x="1002.7" y="161" width="74.9" height="15.0" fill="rgb(236,205,50)" rx="2" ry="2" />
<text text-anchor="" x="1005.70" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.gcBgMarkWorker (4 samples, 3.17%)</title><rect x="10.0" y="273" width="37.5" height="15.0" fill="rgb(219,45,17)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >run..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.gcStart (38 samples, 30.16%)</title><rect x="365.9" y="161" width="355.8" height="15.0" fill="rgb(208,58,6)" rx="2" ry="2" />
<text text-anchor="" x="368.87" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.gcStart</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.semasleep (6 samples, 4.76%)</title><rect x="1124.4" y="193" width="56.2" height="15.0" fill="rgb(254,56,23)" rx="2" ry="2" />
<text text-anchor="" x="1127.44" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runti..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.newMarkBits (1 samples, 0.79%)</title><rect x="337.8" y="49" width="9.3" height="15.0" fill="rgb(253,75,4)" rx="2" ry="2" />
<text text-anchor="" x="340.78" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mach_semaphore_signal (1 samples, 0.79%)</title><rect x="1180.6" y="145" width="9.4" height="15.0" fill="rgb(229,122,27)" rx="2" ry="2" />
<text text-anchor="" x="1183.63" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.wakep (1 samples, 0.79%)</title><rect x="1180.6" y="225" width="9.4" height="15.0" fill="rgb(211,84,13)" rx="2" ry="2" />
<text text-anchor="" x="1183.63" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>github.com/gopherguides/training/advanced/profiling/src.BenchmarkSplit (115 samples, 91.27%)</title><rect x="47.5" y="241" width="1076.9" height="15.0" fill="rgb(212,102,35)" rx="2" ry="2" />
<text text-anchor="" x="50.46" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >github.com/gopherguides/training/advanced/profiling/src.BenchmarkSplit</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.notesleep (6 samples, 4.76%)</title><rect x="1124.4" y="209" width="56.2" height="15.0" fill="rgb(217,116,12)" rx="2" ry="2" />
<text text-anchor="" x="1127.44" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runti..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*gcControllerState).endCycle (1 samples, 0.79%)</title><rect x="10.0" y="241" width="9.4" height="15.0" fill="rgb(226,95,46)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.goexit (119 samples, 94.44%)</title><rect x="10.0" y="289" width="1114.4" height="15.0" fill="rgb(205,8,47)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime.goexit</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>strings.IndexByte (5 samples, 3.97%)</title><rect x="1077.6" y="161" width="46.8" height="15.0" fill="rgb(212,204,4)" rx="2" ry="2" />
<text text-anchor="" x="1080.62" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >stri..</text>
</g>
</svg>
